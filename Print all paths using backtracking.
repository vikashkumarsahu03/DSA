public class Backtracking {
    public static void main(String[] args){
        boolean [][] maze={
                {true,true,true},
                {true,true,true},
                {true,true,true}

        };
        System.out.println(Allpaths("",maze,0,0));
    }
static ArrayList<String > Allpaths(String p,boolean maze[][],int r,int c){
        if(r== maze.length-1 &&c== maze[0].length-1){
            ArrayList<String>list=new ArrayList<>();
            list.add(p);
            return list;

        }

        ArrayList<String>list=new ArrayList<>();
        if (maze[r][c]==false){
            return list;

        }
        maze[r][c]=false;
        if(r< maze.length-1){
            ArrayList<String>down=Allpaths(p+'D',maze,r+1,c);
            list.addAll(down);
        }
        if(c< maze[0].length-1){
            ArrayList<String>right=Allpaths(p+'R',maze,r,c+1);
            list.addAll(right);

        }

        if(r>0) {
            ArrayList<String> left =Allpaths(p + 'U', maze, r, r - 1);
            list.addAll(left);
        }
        if(c>0) {
            ArrayList<String>up  = Allpaths(p + 'L', maze, r,  c-1);
            list.addAll(up);
        }
        maze[r][c]=true;



        return list;


    }


}
